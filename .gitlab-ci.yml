variables:
  SCHEDULER_PARAMETERS: "-N 1 -M escori -t 06:00:00 -q compile -A m3503"
  
.setup-buildtest: &setup-buildtest
  - module load python
  - conda create -p $CI_PROJECT_DIR/.conda python=3.8 -y
  - source activate buildtest
  - git clone -b devel https://github.com/buildtesters/buildtest    
  - cd buildtest 
  - . setup.sh
  - git log --oneline -1
  - buildtest --help
  - rm -rf $HOME/.buildtest
  - mkdir -p $HOME/.buildtest
  - buildtest -c $CI_PROJECT_DIR/config.yml config validate
  
.cleanup-buildtest: &cleanup-buildtest
  - conda env remove -p $CI_PROJECT_DIR/.conda  -y
  
stages:
  - build
  - test
validate_tests:
  stage: build
  tags: [cori]
  before_script:
    - *setup-buildtest
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "push"'
      when: manual
  script:
    - buildtest -c $CI_PROJECT_DIR/config.yml buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - mkdir -p $CI_PROJECT_DIR/.artifacts
    - cp $HOME/.buildtest/buildspecs/{cache.json,error.txt} $CI_PROJECT_DIR/.artifacts
    - source deactivate 
  
  after_script:
    - *cleanup-buildtest
  
  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts       
    expire_in: 2 week

scheduled_system_check:
  stage: test
  only:
    refs:
      - schedules
    variables:
      - $DAILYCHECK == "True"
  tags: [cori]
  before_script:
    - *setup-buildtest
  script:
    - buildtest -c $CI_PROJECT_DIR/config.yml buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest -c $CI_PROJECT_DIR/config.yml build --tags daily -ft daily -r $BUILDTEST_ROOT/report.json
    - buildtest report --filter state=FAIL -r $BUILDTEST_ROOT/report.json
    - mkdir -p $CI_PROJECT_DIR/.artifacts
    - cp $BUILDTEST_ROOT/{buildtest.log,report.json} $CI_PROJECT_DIR/.artifacts
    - buildtest -c $CI_PROJECT_DIR/config.yml cdash upload daily_check -r $BUILDTEST_ROOT/report.json
    - source deactivate 
  after_script:
    - *cleanup-buildtest
  
  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts      
    expire_in: 2 week

apps:
  stage: test
  tags: [cori]
  only: 
    refs: 
      - schedules
    variables:
      - $APP == "True"

  before_script:
  - *setup-buildtest
  script:
    - buildtest -c $CI_PROJECT_DIR/config.yml buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest -c $CI_PROJECT_DIR/config.yml build --tags compile --filter-tags compile -r $BUILDTEST_ROOT/report.json
    - buildtest report --filter state=FAIL -r $BUILDTEST_ROOT/report.json
    - mkdir -p $CI_PROJECT_DIR/.artifacts
    - cp $BUILDTEST_ROOT/{buildtest.log,report.json} $CI_PROJECT_DIR/.artifacts
    - buildtest -c $CI_PROJECT_DIR/config.yml cdash upload apps -r $BUILDTEST_ROOT/report.json
    - source deactivate 
  after_script:
    - *cleanup-buildtest
    
  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts

benchmark:
  stage: test
  tags: [cori]
  only:
    refs:
      - schedules
    variables:
      - $BENCHMARK == "True"

  before_script:
  - *setup-buildtest
  script:
    - buildtest -c $CI_PROJECT_DIR/config.yml buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest -c $CI_PROJECT_DIR/config.yml build --tags benchmark --filter-tags benchmark -r $BUILDTEST_ROOT/report.json
    - buildtest report --filter state=FAIL -r $BUILDTEST_ROOT/report.json
    - mkdir -p $CI_PROJECT_DIR/.artifacts
    - cp $BUILDTEST_ROOT/{buildtest.log,report.json} $CI_PROJECT_DIR/.artifacts
    - buildtest -c $CI_PROJECT_DIR/config.yml cdash upload benchmark -r $BUILDTEST_ROOT/report.json
    - source deactivate
  after_script:
    - *cleanup-buildtest

  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts

e4s_tests:
  stage: test
  only:
    refs:
      - schedules
    variables:
      - $E4S == "True"
  tags: [cori]
  before_script:
    - *setup-buildtest
  script:
    - buildtest -c $CI_PROJECT_DIR/config.yml buildspec find --rebuild --root $CI_PROJECT_DIR/buildspecs
    - buildtest -c $CI_PROJECT_DIR/config.yml build --tags e4s -r $BUILDTEST_ROOT/report.json
    - buildtest report --filter state=FAIL -r $BUILDTEST_ROOT/report.json
    - mkdir -p $CI_PROJECT_DIR/.artifacts
    - cp $BUILDTEST_ROOT/{buildtest.log,report.json} $CI_PROJECT_DIR/.artifacts
    - buildtest -c $CI_PROJECT_DIR/config.yml cdash upload e4s -r $BUILDTEST_ROOT/report.json
    - source deactivate 
  after_script:
    - *cleanup-buildtest
    
  artifacts:
    paths:
      - $CI_PROJECT_DIR/.artifacts
    expire_in: 2 week
    
